using Exiled.API.Features;
namespace MongoDB.auto_events
{
    public class Main
    {
        internal readonly Plugin plugin;
        public Main(Plugin plugin) => this.plugin = plugin;
        public storm_base storm_base;
        public void Register()
        {
            Exiled.Events.Handlers.Server.SendingRemoteAdminCommand += RA;
            RegisterStormBase();
        }
        public void UnRegister()
        {
            Exiled.Events.Handlers.Server.SendingRemoteAdminCommand -= RA;
            UnRegisterStormBase();
        }
        public void RegisterStormBase()
        {
            storm_base = new storm_base(this);
            Exiled.Events.Handlers.Player.InteractingElevator += storm_base.Elevator;
            Exiled.Events.Handlers.Server.WaitingForPlayers += storm_base.Waiting;
            Exiled.Events.Handlers.Server.RoundStarted += storm_base.Started;
            Exiled.Events.Handlers.Player.Spawning += storm_base.Spawned;
            Exiled.Events.Handlers.Player.Left += storm_base.Left;
            Exiled.Events.Handlers.Player.Joined += storm_base.Join;
            Exiled.Events.Handlers.Player.PickingUpItem += storm_base.Pickup;
            Exiled.Events.Handlers.Player.ItemDropped += storm_base.Drop;
            Exiled.Events.Handlers.Player.Died += storm_base.Dead;
            Exiled.Events.Handlers.Server.EndingRound += storm_base.Ending;
        }
        public void UnRegisterStormBase()
        {
            Exiled.Events.Handlers.Player.InteractingElevator -= storm_base.Elevator;
            Exiled.Events.Handlers.Server.WaitingForPlayers -= storm_base.Waiting;
            Exiled.Events.Handlers.Server.RoundStarted -= storm_base.Started;
            Exiled.Events.Handlers.Player.Spawning -= storm_base.Spawned;
            Exiled.Events.Handlers.Player.Left -= storm_base.Left;
            Exiled.Events.Handlers.Player.Joined -= storm_base.Join;
            Exiled.Events.Handlers.Player.PickingUpItem -= storm_base.Pickup;
            Exiled.Events.Handlers.Player.ItemDropped -= storm_base.Drop;
            Exiled.Events.Handlers.Player.Died -= storm_base.Dead;
            Exiled.Events.Handlers.Server.EndingRound -= storm_base.Ending;
            storm_base = null;
        }
        private void RA(Exiled.Events.EventArgs.SendingRemoteAdminCommandEventArgs ev)
        {
            if (ev.Name == "auto_event" || ev.Name == "aa")
            {
                ev.IsAllowed = false;
                if (Event_Access(ev.CommandSender.SenderId))
                {
                    if (ev.Arguments.Count > 0)
                    {
                        string event_name = ev.Arguments[0].ToLower();
                        if (event_name == "storm" || event_name == "storm_base" || event_name == "sb")
                        {
                            storm_base.Enabled = true;
                            foreach (Player pl in Player.List)
                            {
                                pl.Broadcast(15, "<size=30%><color=#0089c7>–°–µ–π—á–∞—Å –∑–∞–ø—É—â–µ–Ω –∏–≤–µ–Ω—Ç <color=red>–®—Ç—É—Ä–º –±–∞–∑—ã –•–∞–æ—Å–∞</color>.</color>\n<color=#494f61>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –Ω–∞ <color=lime>[<color=aqua>—ë</color>]</color>.</color></size>");
                                pl.SendConsoleMessage("\n–®—Ç—É—Ä–º –±–∞–∑—ã –•–∞–æ—Å–∞\n–•–∞–æ—Å –∑–∞–±—Ä–∞–ª –∏–∑ –∫–æ–º–ø–ª–µ–∫—Å–∞ –ø—ã–ª–µ—Å–æ—Å, —Å–æ–≤–µ—Ç –æ5 –¥–∞–ª –ø—Ä–∏–∫–∞–∑: *–≤–µ—Ä–Ω—É—Ç—å –ø—ã–ª–µ—Å–æ—Å*.\n–ó–∞–¥–∞—á–∞ –º–æ–≥ - –∑–∞–±—Ä–∞—Ç—å –ø—ã–ª–µ—Å–æ—Å –∏–∑ –±–∞–∑—ã —Ö–∞–æ—Å–∞.\n–ó–∞–¥–∞—á–∞ —Ö–∞–æ—Å–∞ - –∑–∞—â–∏—Ç–∏—Ç—å –ø—ã–ª–µ—Å–æ—Å.\n–ü—ã–ª–µ—Å–æ—Å –º–æ–≥—É—Ç –ø–æ–¥–±–∏—Ä–∞—Ç—å –∏ –º–æ–≥, –∏ —Ö–∞–æ—Å. –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø–æ–¥–æ–±—Ä–∞–ª –ø—ã–ª–µ—Å–æ—Å, —Ç–æ –æ–± —ç—Ç–æ–º —É–∑–Ω–∞—é—Ç –¥—Ä—É–≥–∏–µ, –ø–æ—ç—Ç–æ–º—É –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã.", "red");
                            }
                            ev.ReplyMessage = "–£—Å–ø–µ—à–Ω–æ";
                            if (EventHandlers.RoundStarted) storm_base.Started();
                            logs.send.sendralog($"üéöÔ∏è –ó–∞–ø—É—â–µ–Ω –∏–≤–µ–Ω—Ç - mtf vs ci");
                            logs.send.sendra($"üéöÔ∏è –ó–∞–ø—É—â–µ–Ω –∏–≤–µ–Ω—Ç - mtf vs ci");
                        }
                    }
                    else
                    {
                        ev.ReplyMessage = "auto_event storm_base";
                    }
                }
                else
                {
                    ev.ReplyMessage = "–ù–µ—Ç –ø—Ä–∞–≤, —É–≤—ã.";
                }
            }
        }
        private bool Event_Access(string iD)
        {
            bool _ = false;
            if (iD == "-@steam" || iD == "SERVER CONSOLE") _ = true;
            try
            {
                var main = plugin.donate.main[iD];
                if (main.hr || main.ghr || main.ar || main.gar) _ = true;
            }
            catch { }
            return _;
        }
    }
}